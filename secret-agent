#!/bin/bash

SCRIPTPATH="$( which "$0" )"
SCRIPTPATH="$( readlink --canonicalize "${SCRIPTPATH}" )"
SCRIPTNAME="$( basename "${SCRIPTPATH}" )"
SCRIPTDIR="$( dirname "${SCRIPTPATH}" )"

PATH="${SCRIPTDIR}:${PATH}"
STDIN=1
STDERR=2
SSH_AGENT_SCRIPT_FILEPATH="${HOME}/.ssh/living-agent.sh"

EXITCODE=0

if [[ "$1" = "keys" ]] ; then
	secret-agent-keys
	EXITCODE=$?
else

	ACTIVATE_AGENT="ssh-agent"
	if [ -r "${SSH_AGENT_SCRIPT_FILEPATH}" ] ; then
		SSH_AGENT_SCRIPT="$( cat "${SSH_AGENT_SCRIPT_FILEPATH}" )"

		eval "${SSH_AGENT_SCRIPT}" > /dev/null

		# example output:
		# SSH_AUTH_SOCK=/tmp/ssh-rPzdsASlvLVn/agent.73; export SSH_AUTH_SOCK;
		# SSH_AGENT_PID=74; export SSH_AGENT_PID;
		# echo Agent pid 74;

		if [[ -z "${SSH_AGENT_PID}" ]] ; then
			printf "[${SCRIPTNAME}] no agent PID provided\n" 1>&${STDERR}
	
		elif [[ ! -r "/proc/${SSH_AGENT_PID}" ]] ; then
			printf "[${SCRIPTNAME}] agent PID (#%d) does not seem to be alive\n" "${SSH_AGENT_PID}" 1>&${STDERR}
		
		elif [[ -z "${SSH_AUTH_SOCK}" ]] ; then
			printf "[${SCRIPTNAME}] no socket provided\n" 1>&${STDERR}

		elif [[ ! -r "${SSH_AUTH_SOCK}" ]] ; then
			printf "[${SCRIPTNAME}] socket (%s) is not readable\n" "${SSH_AUTH_SOCK}" 1>&${STDERR}
	

		else
			ACTIVATE_AGENT=""
			printf "%s" "${SSH_AGENT_SCRIPT}"

		fi

	fi

	if [ ! -z "${ACTIVATE_AGENT}" ] ; then
		chmod 600 "${SSH_AGENT_SCRIPT_FILEPATH}"
		${ACTIVATE_AGENT} | tee "${SSH_AGENT_SCRIPT_FILEPATH}"
		chmod 400 "${SSH_AGENT_SCRIPT_FILEPATH}"
	fi

fi

exit "${EXITCODE}"

